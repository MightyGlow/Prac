import threading
def print_hello(n):
print("Hello, how old are you? ", n)
T1 = threading.Thread( target = print_hello, args = (20, ))
T1.start()
T1.join()
print("Thank you")
Hello, how old are you? 20
Thank you
write a program to work with single threads
from time import sleep, perf_counter
def task():
print('Starting a task...')
sleep(1)
print('done')
start_time = perf_counter()
task()
task()
task()
end_time = perf_counter()
print(f'It took {end_time- start_time: 0.6f} second(s) to complete.')
Starting a task...
done
Starting a task...
done
Starting a task...
done
It took 3.006065 second(s) to complete.
write a program to work with multi threads
from time import sleep, perf_counter
from threading import Thread
def task():
print('Starting a task...')
sleep(1)
print('done')
9/13/22, 3:40 PM practical 2.1.ipynb - Colaboratory
https://colab.research.google.com/drive/1861KgoN09gcG6JK4EiMRvwTDZkSU_Kmg#scrollTo=T1ztxUBXO4BP&printMode=true 2/3
p ( )
start_time = perf_counter()
# create two new threads
t1 = Thread(target=task)
t2 = Thread(target=task)
# start the threads
t1.start()
t2.start()
# wait for the threads to complete
t1.join()
t2.join()
end_time = perf_counter()
print(f'It took {end_time- start_time: 0.2f} second(s) to complete.')
Starting a task...
Starting a task...
done
done
It took 1.01 second(s) to complete.
Passing arguments to threads
from time import sleep, perf_counter
from threading import Thread
def task(id):
print(f'Starting the task {id}...')
sleep(1)
print(f'The task {id} completed')
start_time = perf_counter()
# create and start 10 threads
threads = []
for n in range(1, 11):
t = Thread(target=task, args=(n,))
threads.append(t)
t.start()
# wait for the threads to complete
for t in threads:
t.join()
9/13/22, 3:40 PM practical 2.1.ipynb - Colaboratory
https://colab.research.google.com/drive/1861KgoN09gcG6JK4EiMRvwTDZkSU_Kmg#scrollTo=T1ztxUBXO4BP&printMode=true 3/3
Colab paid products - Cancel contracts here
end_time = perf_counter()
print(f'It took {end_time- start_time: 0.2f} second(s) to complete.')
